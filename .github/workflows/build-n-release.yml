name: Build and Release

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  app-name: 'pantstation'

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add rustfmt
      - run: cargo fmt -- --check

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          default: true
          override: true

      - name: Build
        run: |
          sudo apt update && sudo apt install musl-tools
          rustup target add x86_64-unknown-linux-musl
          cargo build --release --target x86_64-unknown-linux-musl
          strip target/x86_64-unknown-linux-musl/release/${{ env.app-name }}
          mv target/x86_64-unknown-linux-musl/release/${{ env.app-name }} target/x86_64-unknown-linux-musl/release/${{ env.app-name }}-x86_64-unknown-linux-musl

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-musl/release/${{ env.app-name }}-x86_64-unknown-linux-musl
          asset_name: ${{ env.app-name }}-x86_64-unknown-linux-musl
          tag: ${{ github.ref }}
          overwrite: true

  build-osx:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build for MacOSX
        run: cargo build --all --release && strip target/release/${{ env.app-name }} && mv target/release/${{ env.app-name }} target/release/${{ env.app-name }}-x86_64-apple-darwin

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ env.app-name }}-x86_64-apple-darwin
          asset_name: ${{ env.app-name }}-x86_64-apple-darwin
          tag: ${{ github.ref }}

  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build for Windows
        run: cargo build --all --release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ env.app-name }}.exe
          asset_name: ${{ env.app-name }}-x86_64-windows.exe
          tag: ${{ github.ref }}
